{
	"info": {
		"_postman_id": "acb1b3f9-f747-4412-bd94-50b2d9a1646a",
		"name": "cdp-g7",
		"description": "# CDP Groupe 7\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "project",
			"item": [
				{
					"name": "/create POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4568929c-68d4-46aa-a124-ed7dab6df6de",
								"exec": [
									"pm.test(\"status code 201\", function() {pm.response.to.have.status(201)});",
									"",
									"pm.test(\"project good created\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql('Test');",
									"    pm.environment.set('projectId', jsonData.id)",
									"})",
									"",
									"postman.setNextRequest(\"/:projectId GET\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"name\": \"Test\",\n  \"start_date\": \"2020-11-12\",\n  \"state\": \"Ouvert\",\n  \"end_date\": \"2020-11-12\",\n  \"git_repo\": null,\n  \"description\": \"Projet de test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/project/create",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/ GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d947f9c1-3746-4a75-bbad-dfc38eb5bb48",
								"exec": [
									"pm.test(\"status code 201\", function() {pm.response.to.have.status(200)});",
									"",
									"pm.test(\"List all project\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.projectList.length).to.be.above(0);",
									"})",
									"// postman.setNextRequest(\"/us/create POST\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/project/",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/:projectId GET",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "efe4bc8a-a877-4629-bd30-014fe37c72bf",
								"exec": [
									"pm.test(\"status code 201\", function() {pm.response.to.have.status(200)});",
									"",
									"pm.test(\"Good project return\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.equal(pm.environment.get(\"projectId\"));",
									"});",
									"",
									"// postman.setNextRequest(\"/ GET\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/project/{{projectId}}",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								"{{projectId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "us",
			"item": [
				{
					"name": "/us/create POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "40c5b1f8-33d0-4821-aca1-59fed7c7437e",
								"exec": [
									"pm.test(\"status code 201\", function() {pm.response.to.have.status(201)});",
									"",
									"pm.test(\"us good created\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.eql('En tant que développeur je veux pouvoir me créer un compte');",
									"    pm.environment.set('usId', jsonData.id)",
									"});",
									"",
									"postman.setNextRequest(\"/us/display/:idProject POST\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"En tant que développeur je veux pouvoir me créer un compte\",\n    \"type\": \"NewFeature\",\n    \"state\": \"Ouvert\",\n    \"projectId\": 1,\n    \"priority\": 1,\n    \"difficulty\": 3,\n    \"sprintId\": null\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/project/{{projectId}}/us/create",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								"{{projectId}}",
								"us",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "/us/:idUs/modify POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56aaa0e5-8fe4-4639-99f7-d3a4c1612ffd",
								"exec": [
									"pm.test(\"status code 200\", function() {pm.response.to.have.status(200)});",
									"",
									"pm.test(\"us good id\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.equal(pm.environment.get('usId'));",
									"    ",
									"});",
									"",
									"pm.test(\"us good modify\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).to.deep.equal('Modification');",
									"    ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{usId}},\n    \"description\": \"Modification\",\n    \"type\": \"NewFeature\",\n    \"state\": \"Ouvert\",\n    \"projectId\": 1,\n    \"priority\": 1,\n    \"difficulty\": 3,\n    \"sprintId\": null\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localhost}}/project/{{projectId}}/us/{{usId}}/modify",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								"{{projectId}}",
								"us",
								"{{usId}}",
								"modify"
							]
						}
					},
					"response": []
				},
				{
					"name": "/us/display/:idProject POST",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a9868f8-acba-45b8-92a0-877e06370b23",
								"exec": [
									"pm.test(\"status code 200\", function() {pm.response.to.have.status(200)});",
									"",
									"pm.test(\"List all us\", function() { ",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf.at.least(0);",
									"})",
									"// postman.setNextRequest(\"/us/:idUs/modify POST\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{localhost}}/project/{{projectId}}/us/display/{{projectId}}/",
							"host": [
								"{{localhost}}"
							],
							"path": [
								"project",
								"{{projectId}}",
								"us",
								"display",
								"{{projectId}}",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}